{
  "tasks": [
    {
      "id": "5ac215b4-a6da-42ca-bff9-a7feaedfee40",
      "name": "Step 1: JTS 라이브러리 의존성 추가",
      "description": "build.gradle에 JTS(Java Topology Suite) 라이브러리 의존성을 추가합니다. hibernate-spatial에 포함되어 있을 수 있지만 명시적으로 추가하여 확실하게 합니다.",
      "status": "completed",
      "dependencies": [],
      "createdAt": "2025-10-15T03:19:37.047Z",
      "updatedAt": "2025-10-15T03:22:26.812Z",
      "relatedFiles": [
        {
          "path": "C:\\fivlo-backend\\build.gradle",
          "type": "TO_MODIFY",
          "description": "JTS 의존성 추가",
          "lineStart": 26,
          "lineEnd": 64
        }
      ],
      "implementationGuide": "1. build.gradle 파일 열기\\n2. dependencies 블록에 추가:\\nimplementation 'org.locationtech.jts:jts-core:1.19.0'\\n3. 파일 저장",
      "verificationCriteria": "build.gradle의 dependencies 블록에 org.locationtech.jts:jts-core:1.19.0이 추가되었는지 확인",
      "analysisResult": "FIVLO 백엔드의 위치 데이터 저장 방식을 DECIMAL(latitude, longitude)에서 PostGIS GEOMETRY(Point)로 안전하게 전환합니다. 기존 컬럼을 유지하면서 새로운 location 컬럼을 추가하고, JTS 라이브러리로 Point 타입을 처리합니다. 기존 API 동작은 그대로 유지되며, 향후 공간 쿼리 기능 확장이 가능해집니다.",
      "summary": "build.gradle의 dependencies 블록(46번 줄)에 JTS 라이브러리 의존성 'org.locationtech.jts:jts-core:1.19.0'이 성공적으로 추가되었습니다. PostGIS 지원 섹션 내에 적절하게 배치되었으며, 향후 Point 타입 처리를 위한 준비가 완료되었습니다.",
      "completedAt": "2025-10-15T03:22:26.810Z"
    },
    {
      "id": "967d9daa-1c72-4d72-982b-76c9cb04ac47",
      "name": "Step 2: Flyway 마이그레이션 파일 생성 (V5)",
      "description": "PostGIS Extension을 활성화하고, forgetting_prevention_reminders 테이블에 location GEOMETRY(Point, 4326) 컬럼을 추가하는 마이그레이션 파일을 생성합니다. 기존 latitude/longitude 데이터를 location으로 변환하고, GIST 인덱스를 생성합니다.",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "5ac215b4-a6da-42ca-bff9-a7feaedfee40"
        }
      ],
      "createdAt": "2025-10-15T03:19:37.047Z",
      "updatedAt": "2025-10-15T03:19:37.047Z",
      "relatedFiles": [
        {
          "path": "C:\\fivlo-backend\\src\\main\\resources\\db\\migration\\V5__Enable_PostGIS_and_add_location_column.sql",
          "type": "CREATE",
          "description": "PostGIS 활성화 및 location 컬럼 추가 마이그레이션"
        }
      ],
      "implementationGuide": "1. src/main/resources/db/migration/ 폴더에 V5__Enable_PostGIS_and_add_location_column.sql 파일 생성\\n2. 파일 내용:\\n-- PostGIS Extension 활성화\\nCREATE EXTENSION IF NOT EXISTS postgis;\\n\\n-- location 컬럼 추가\\nALTER TABLE forgetting_prevention_reminders \\nADD COLUMN location GEOMETRY(Point, 4326);\\n\\n-- 기존 데이터 변환\\nUPDATE forgetting_prevention_reminders \\nSET location = ST_SetSRID(\\n    ST_MakePoint(\\n        location_longitude::double precision, \\n        location_latitude::double precision\\n    ), 4326)\\nWHERE location_latitude IS NOT NULL \\n  AND location_longitude IS NOT NULL;\\n\\n-- 공간 인덱스 생성\\nCREATE INDEX idx_forgetting_prevention_reminders_location_gist \\nON forgetting_prevention_reminders USING GIST(location);\\n3. 파일 저장",
      "verificationCriteria": "V5 마이그레이션 파일이 생성되었고, PostGIS Extension 활성화, location 컬럼 추가, 데이터 변환, GIST 인덱스 생성 SQL이 포함되어 있는지 확인",
      "analysisResult": "FIVLO 백엔드의 위치 데이터 저장 방식을 DECIMAL(latitude, longitude)에서 PostGIS GEOMETRY(Point)로 안전하게 전환합니다. 기존 컬럼을 유지하면서 새로운 location 컬럼을 추가하고, JTS 라이브러리로 Point 타입을 처리합니다. 기존 API 동작은 그대로 유지되며, 향후 공간 쿼리 기능 확장이 가능해집니다."
    },
    {
      "id": "359a6b69-c493-4aa1-8b2b-b6687a81c46d",
      "name": "Step 3: ForgettingPreventionReminder Entity에 Point 필드 추가",
      "description": "ForgettingPreventionReminder 엔티티에 org.locationtech.jts.geom.Point 타입의 location 필드를 추가합니다. 기존 locationLatitude, locationLongitude 필드는 유지합니다.",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "967d9daa-1c72-4d72-982b-76c9cb04ac47"
        }
      ],
      "createdAt": "2025-10-15T03:19:37.047Z",
      "updatedAt": "2025-10-15T03:19:37.047Z",
      "relatedFiles": [
        {
          "path": "C:\\fivlo-backend\\src\\main\\java\\com\\fivlo\\fivlo_backend\\domain\\reminder\\entity\\ForgettingPreventionReminder.java",
          "type": "TO_MODIFY",
          "description": "Point 타입 location 필드 추가",
          "lineStart": 1,
          "lineEnd": 152
        }
      ],
      "implementationGuide": "1. ForgettingPreventionReminder.java 파일 열기\\n2. import 추가:\\nimport org.locationtech.jts.geom.Point;\\n3. location 필드 추가 (59번 줄 뒤에):\\n@Column(name = \\\"location\\\", columnDefinition = \\\"geometry(Point,4326)\\\")\\nprivate Point location;\\n4. setLocation() 메서드 추가 (111번 줄 뒤에):\\npublic void setLocation(Point location) {\\n    this.location = location;\\n}\\n5. Builder에 location 파라미터 추가 (72번 줄):\\npublic ForgettingPreventionReminder(..., Point location) {\\n    ...\\n    this.location = location;\\n}\\n6. 파일 저장",
      "verificationCriteria": "ForgettingPreventionReminder 엔티티에 Point location 필드가 추가되었고, setLocation() 메서드와 Builder에 location이 포함되어 있는지 확인. 기존 latitude/longitude 필드는 그대로 유지되어 있는지 확인",
      "analysisResult": "FIVLO 백엔드의 위치 데이터 저장 방식을 DECIMAL(latitude, longitude)에서 PostGIS GEOMETRY(Point)로 안전하게 전환합니다. 기존 컬럼을 유지하면서 새로운 location 컬럼을 추가하고, JTS 라이브러리로 Point 타입을 처리합니다. 기존 API 동작은 그대로 유지되며, 향후 공간 쿼리 기능 확장이 가능해집니다."
    },
    {
      "id": "2925d834-ad7a-44b5-bed1-f0657f5c02bd",
      "name": "Step 4: GeoService에 GeometryFactory 및 Point 생성 로직 추가",
      "description": "GeoService에 GeometryFactory를 추가하고, BigDecimal 좌표를 Point 객체로 변환하는 메서드를 추가합니다.",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "359a6b69-c493-4aa1-8b2b-b6687a81c46d"
        }
      ],
      "createdAt": "2025-10-15T03:19:37.047Z",
      "updatedAt": "2025-10-15T03:19:37.047Z",
      "relatedFiles": [
        {
          "path": "C:\\fivlo-backend\\src\\main\\java\\com\\fivlo\\fivlo_backend\\domain\\reminder\\service\\GeoService.java",
          "type": "TO_MODIFY",
          "description": "GeometryFactory 및 Point 생성 로직 추가",
          "lineStart": 1,
          "lineEnd": 55
        }
      ],
      "implementationGuide": "1. GeoService.java 파일 열기\\n2. import 추가:\\nimport org.locationtech.jts.geom.Coordinate;\\nimport org.locationtech.jts.geom.GeometryFactory;\\nimport org.locationtech.jts.geom.Point;\\n3. GeometryFactory 필드 추가 (23번 줄 뒤에):\\nprivate final GeometryFactory geometryFactory = new GeometryFactory();\\n4. createPoint() 메서드 추가 (53번 줄 뒤에):\\npublic Point createPoint(BigDecimal longitude, BigDecimal latitude) {\\n    if (longitude == null || latitude == null) {\\n        return null;\\n    }\\n    return geometryFactory.createPoint(\\n        new Coordinate(longitude.doubleValue(), latitude.doubleValue())\\n    );\\n}\\n5. 파일 저장",
      "verificationCriteria": "GeoService에 GeometryFactory 필드가 추가되었고, createPoint() 메서드가 구현되어 BigDecimal을 Point로 변환할 수 있는지 확인",
      "analysisResult": "FIVLO 백엔드의 위치 데이터 저장 방식을 DECIMAL(latitude, longitude)에서 PostGIS GEOMETRY(Point)로 안전하게 전환합니다. 기존 컬럼을 유지하면서 새로운 location 컬럼을 추가하고, JTS 라이브러리로 Point 타입을 처리합니다. 기존 API 동작은 그대로 유지되며, 향후 공간 쿼리 기능 확장이 가능해집니다."
    },
    {
      "id": "bcf89fa5-cb6b-4696-a68a-6578256a8360",
      "name": "Step 5: ReminderService에서 Point 설정 로직 추가",
      "description": "ReminderService의 create() 및 update() 메서드에서 locationLatitude/locationLongitude가 있을 때 Point도 함께 설정하도록 로직을 추가합니다.",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "2925d834-ad7a-44b5-bed1-f0657f5c02bd"
        }
      ],
      "createdAt": "2025-10-15T03:19:37.047Z",
      "updatedAt": "2025-10-15T03:19:37.047Z",
      "relatedFiles": [
        {
          "path": "C:\\fivlo-backend\\src\\main\\java\\com\\fivlo\\fivlo_backend\\domain\\reminder\\service\\ReminderService.java",
          "type": "TO_MODIFY",
          "description": "Point 설정 로직 추가",
          "lineStart": 31,
          "lineEnd": 100
        }
      ],
      "implementationGuide": "1. ReminderService.java 파일 열기\\n2. GeoService 의존성 주입 (29번 줄 뒤에):\\nprivate final GeoService geoService;\\n3. create() 메서드 수정 (47번 줄):\\nif(user.getIsPremium() && dto.locationName() != null) {\\n    reminder.updateLocationInfo(dto.locationName(), dto.locationAddress(), dto.locationLatitude(), dto.locationLongitude());\\n    // Point 설정 추가\\n    var point = geoService.createPoint(dto.locationLongitude(), dto.locationLatitude());\\n    reminder.setLocation(point);\\n}\\n4. update() 메서드도 동일하게 수정\\n5. 파일 저장",
      "verificationCriteria": "ReminderService에 GeoService 의존성이 주입되었고, create() 및 update() 메서드에서 Point를 설정하는 로직이 추가되었는지 확인. 기존 latitude/longitude 저장 로직은 그대로 유지되는지 확인",
      "analysisResult": "FIVLO 백엔드의 위치 데이터 저장 방식을 DECIMAL(latitude, longitude)에서 PostGIS GEOMETRY(Point)로 안전하게 전환합니다. 기존 컬럼을 유지하면서 새로운 location 컬럼을 추가하고, JTS 라이브러리로 Point 타입을 처리합니다. 기존 API 동작은 그대로 유지되며, 향후 공간 쿼리 기능 확장이 가능해집니다."
    }
  ]
}